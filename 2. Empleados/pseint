Estructura Empleado
    cadena nombre
    flotante sueldo_anual
    entero matriz_datos[3][12] // Matriz para horas, valor y sueldo mensual
FinEstructura

Proceso Principal
    Empleado lista_empleados[30]// Lista de empleados
    Entero cantidad
    
    // 1. Obtiene nómina de empleados
    nomina = obtener_nomina()

    // 2. Pedir datos de los empleados y cargar la lista
    cantidad = nomina.largo
    cargar_datos_empleados(nomina, cantidad, lista_empleados)

    // 3. Calcular sueldo anual de cada empleado
    calcular_sueldo_anual(lista_empleados, cantidad)

    // 4. Suma de sueldos mensuales
    calcular_total_sueldos_mensuales(lista_empleados, cantidad)

    // 5. Máximo sueldo de cada mes
    calcular_maximo_sueldo_mensual(lista_empleados, cantidad)

    // 6. Porcentaje que representa cada sueldo sobre el total de un mes específico
    calcular_porcentaje_sueldo(lista_empleados, cantidad, 5)

    // 7. Empleado que cobró el menor sueldo en el primer semestre
    calcular_menor_sueldo_semestre(lista_empleados, cantidad)

    // 8. Cantidad de meses en los que se pagó más de 4 millones
    calcular_cantidad_meses_mayor_4millones(lista_empleados, cantidad)

    // 9. Guardar sueldos anuales en archivo ordenados
    guardar_sueldos(lista_empleados, cantidad)
FinProceso

Proceso obtener_nomina()
    Cadena nombres[]
    Entero i = 1
    archivo = AbrirArchivo("2. Empleados\\nomina.txt", "LECTURA")
    Mientras NO FinArchivo(archivo)
        nombre = LeerLinea(archivo)
        nombres[i] = nombre
        i++
    FinMientras

    CerrarArchivo(archivo)

    retornar nombres
FinProceso

Proceso cargar_datos_empleados(nomina, cantidad, lista_empleados)
    Para(Entero i = 1; i <= cantidad; i++)
        // Crear un nuevo empleado y asignar nombre
        lista_empleados[i].nombre = nomina[i]
        lista_empleados[i].sueldo_anual = 0

        Escribir "Carga de datos para el empleado: ", lista_empleados[i].nombre

        // Pedir datos por mes
        Para(Entero  j = 1; j <= 12; j++)
            Escribir "Mes ", j
            Leer horas
            Leer valor
            sueldo <- horas * valor
            lista_empleados[i].matriz_datos[1][j] = horas
            lista_empleados[i].matriz_datos[2][j] = valor
            lista_empleados[i].matriz_datos[3][j] = sueldo
        FinPara
    FinPara
FinProceso

Proceso calcular_sueldo_anual(lista_empleados, cantidad)
    Para(Entero  i = 1 ; i <= cantidad; i++)
        Escribir lista_empleados[i].nombre
        Para(Entero  j = 1; j <= 12; j++)
            lista_empleados[i].sueldo_anual = lista_empleados[i].sueldo_anual + lista_empleados[i].matriz_datos[3][j]
            Escribir lista_empleados[i].sueldo_anual, "\t"
        FinPara
        Escribir ""
    FinPara
FinProceso

Proceso calcular_total_sueldos_mensuales(lista_empleados, cantidad)
    Flotante suma_anual
    suma_anual = 0
    Para(Entero  i = 1 ; i <= cantidad; i++)

        Para(Entero j = 1; j <= 12; j++)
            suma_anual = suma_anual + lista_empleados[i].matriz_datos[3][j]
        FinPara

        Escribir "El sueldo anual de: ", lista_empleados[i].nombre, " es: ", suma_anual
    FinPara
FinProceso

Proceso calcular_maximo_sueldo_mensual(lista_empleados, cantidad)
    Flotante maximo_sueldo 
    Para(Entero mes = 1; mes <=  12; mes++)
        maximo_sueldo = 0
        Para(Entero i = 1; i <= cantidad; i++)
            Si lista_empleados[i].matriz_datos[3][mes] > maximo_sueldo Entonces
                maximo_sueldo = lista_empleados[i].matriz_datos[3][mes]
            FinSi
        FinPara

        Escribir "Máximo sueldo para el mes ", mes, ": ", maximo_sueldo
    FinPara
FinProceso

Proceso calcular_porcentaje_sueldo(lista_empleados, cantidad, que_mes)
    Flotante total, porcentaje
    total = 0

    Para(Entero i = 1; i <= cantidad; i++)
        total = total + lista_empleados[i].matriz_datos[3][que_mes]
    FinPara

    Para(Entero i = 1; i <= cantidad; i++)
        porcentaje = (lista_empleados[i].matriz_datos[3][que_mes] / total) * 100
        Escribir "El sueldo de ", lista_empleados[i].nombre, " representa el ", porcentaje, "% del mes ", que_mes
    FinPara
FinProceso

Proceso calcular_menor_sueldo_semestre(lista_empleados, cantidad)
    Flotante minimo
    minimo = lista_empleados[1].matriz_datos[3][1]

    Para(Entero i = 1; i <= cantidad; i++)
        Para(Entero j = 1; j <= 6; j++)
            Si lista_empleados[i].matriz_datos[3][j] < minimo Entonces
                minimo = lista_empleados[i].matriz_datos[3][j]
            FinSi
        FinPara
    FinPara

    Escribir "El sueldo mínimo es: ", minimo
    Escribir "Los empleados que tienen el sueldo mínimo son:"

    Para(Entero i = 1; i <= cantidad; i++)
        Para(Entero j = 1; j <= 6; j++)
            Si lista_empleados[i].matriz_datos[3][j] = minimo Entonces
                Escribir lista_empleados[i].nombre
            FinSi
        FinPara
    FinPara
FinProceso

Proceso calcular_cantidad_meses_mayor_4millones(lista_empleados, cantidad)
    Entero contador
    contador = 0

    Para(Entero mes = 1; mes <=  12; mes++)
        Flotante suma_sueldos
        suma_sueldos = 0

        Para(Entero i = 1; i <= cantidad; i++)
            suma_sueldos = suma_sueldos + lista_empleados[i].matriz_datos[3][mes]
        FinPara

        Si suma_sueldos > 4000000 Entonces
            contador = contador + 1
        FinSi
    FinPara

    Escribir "La cantidad de meses donde se pagaron más de 4 millones es: ", contador
FinProceso

Proceso guardar_sueldos(lista_empleados, cantidad)
    ordenar_lista(lista_empleados, cantidad)

    archivo = Abrir("liquidacion.txt", ESCRIBIR)
    Para(Entero i = 1; i <= cantidad; i++)
        EscribirLinea(archivo, lista_empleados[i].nombre, ": $", lista_empleados[i].sueldo_anual)
    FinPara
    CerrarArchivo(archivo)
FinProceso

Proceso ordenar_lista(lista_empleados, cantidad)
    Empleado temp
    Para(Entero i = 1; i <= cantidad - 1; i++)
        Para(Entero j = i+1; j <= cantidad; i++)
            Si lista_empleados[i].sueldo_anual > lista_empleados[j].sueldo_anual Entonces
                temp = lista_empleados[i]
                lista_empleados[i] = lista_empleados[j]
                lista_empleados[j] = temp
            FinSi
        FinPara
    FinPara
FinProceso
